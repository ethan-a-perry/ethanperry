---
const iconNames = [
    "arrow-left",
    "arrow-right",
    "chevron-right",
    "open-in-new",
    "undo",
    "redo",
    "x",
    "check",
    "github",
    "goodreads",
    "instagram",
    "linkedin"
] as const;

interface Props {
    href: string;
    icon?: {
        name: (typeof iconNames)[number];
        side?: "left" | "right";
        width?: string;
        height?: string;
    };
    classes?: string;
    isNavLink?: boolean;
}

const {
    href,
    icon,
    classes,
    isNavLink = false,
    ...rest
} = Astro.props as Props;

const iconUseHref = icon ? `/assets/icons/icons.svg#${icon.name}` : undefined;
const ariaCurrent = isNavLink && Astro.url.pathname.startsWith(href) ? "page" : undefined;
---

<a href={href} class:list={[classes, {"with-icon" : !!icon}]} aria-current={ariaCurrent} {...rest}>
    {
        icon && icon.side === "left" && (
            <svg style={`width: ${icon.width ?? "24px"}; height: ${icon.height ?? "24px"};`}>
                <use href={iconUseHref}></use>
            </svg>
        )
    }

    <slot />

    {
        icon && icon.side === "right" && (
            <svg style={`width: ${icon.width ?? "24px"}; height: ${icon.height ?? "24px"};`}>
                <use href={iconUseHref}></use>
            </svg>
        )
    }
</a>

<style>
    a:hover {
        color: var(--color-accent-70);
    }

    a[aria-current="page"] {
        box-shadow: 0 2px 0 0 var(--color-accent-40);
    }

    a.with-icon {
        display: flex;
        align-items: center;
        gap: 7px;
    }

    svg {
        fill: currentColor;
    }
</style>