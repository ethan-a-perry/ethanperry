@layer reset, base, layout, components, utilities;

@import "reset.css" layer(reset);

:root {
    --heading-font: 'freight-sans-pro';
    --content-font: 'minion-pro';
    --caption-font: 'minion-pro-caption';

    --font-size-base: 1rem;
    --font-size-body: 1.25rem;
    --font-size-s: .95rem;
    --font-size-xs: .85rem;

    --font-size-4: 1.25rem;
    --font-size-3: 1.375rem;
    --font-size-2: 1.75rem;
    --font-size-1: 4rem;

    --color-site-background: hsl(51, 41%, 97%);

    --color-text-100: hsl(0, 0%, 10%);
    --color-text-80: hsl(0, 0%, 20%);
    --color-text-65: hsl(0, 0%, 30%);
    --color-text-50: hsl(0, 0%, 41%);
    --color-text-35: hsl(0, 0%, 60%);
    --color-text-20: hsl(0, 0%, 85%);
    --color-text-10: hsl(0, 0%, 78%);

    --_color-accent: 210, 80%, 40%;
    --color-accent-100: hsla(var(--_color-accent), 1);
    --color-accent-70: hsla(var(--_color-accent), 0.7);
    --color-accent-40: hsla(var(--_color-accent), 0.4);
    --color-accent-15: hsla(var(--_color-accent), 0.15);
    --color-accent-15-rgb: rgb(221, 228, 235);

    --_color-accent-secondary: 10, 55%, 45%;
    --color-accent-secondary-15: hsla(var(--_color-accent-secondary), 0.15);
    --color-accent-secondary-30: hsla(var(--_color-accent-secondary), 0.3);
    --color-accent-secondary-100: hsla(var(--_color-accent-secondary), 1);
}

/* Fonts */
body {
    font-family: var(--content-font), serif;
    font-weight: 400;
    font-style: normal;
    font-size: var(--font-size-body);
    line-height: 1.5;

    overflow-x: hidden;

    background: var(--color-site-background);
}

h1, .h1, h2, .h2, h3, .h3, h4, .h4, a, form, label, input, select {
    font-family: var(--heading-font), sans-serif;
    font-weight: 500;
    font-style: normal;
}

.caption {
    font-family: var(--caption-font), serif;
}

.italic {
    font-style: italic;
}

/* Font Sizes */
h1, .h1 {
    --font-size: var(--font-size-1);
    font-size: var(--font-size);
    --font-size-diff: 0.3;
}

h2, .h2 {
    --font-size: var(--font-size-2);
    font-size: var(--font-size);
}

h3, .h3 {
    --font-size: var(--font-size-3);
    font-size: var(--font-size);
}

h4, .h4 {
    --font-size: var(--font-size-4);
    font-size: var(--font-size);
}

.fs-s {
    font-size: var(--font-size-s);
}

.fs-xs {
    font-size: var(--font-size-xs);
}

.fluid-type {
    font-size: clamp(1rem, 4cqi, 3rem);
}

@supports (font-size: 1cqi) {
    :is(h1, .h1, h2, .h2, h3, .h3, h4, .h4, .fluid-type) {
        --_font-min: calc(var(--font-size) - var(--font-size) * var(--font-size-diff, 0.3));

        font-size: clamp(
                max(var(--font-size-body), var(--_font-min)),
                var(--_font-min) + 1cqi,
                var(--font-size)
        );
    }
}

.content-grid {
    --padding-inline: 2rem;
    --content-max-width: 1300px;
    --breakout-max-width: 1300px;

    --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

    display: grid;
    grid-template-columns:
        [full-width-start]minmax(var(--padding-inline), 1fr)
        [breakout-start] minmax(0, var(--breakout-size))
        [content-start] min(100% - (var(--padding-inline) * 2), var(--content-max-width)) [content-end]
        minmax(0, var(--breakout-size)) [breakout-end]
        minmax(var(--padding-inline), 1fr) [full-width-end];
    row-gap: 8rem;
}

.content-grid > :not(.breakout, .full-width),
.full-width > :not(.breakout, .full-width) {
    grid-column: content;
}

.content-grid > .breakout {
    grid-column: breakout;
}

.content-grid > .full-width {
    grid-column: full-width;

    display: grid;
    grid-template-columns: inherit;
}

@layer utilities {
    .flow-col-2 * + * {
        margin-top: 2rem;
    }

    .flow-col--5 * + * {
        margin-top: 0.5rem;
    }

    .ul-flow {
        display: flex;
        flex-direction: column;
        gap: 2rem;

        *> * + * {
            margin-top: 0.5rem;
        }
    }

    .grid-span-all {
        grid-column: 1 / -1;
    }

    .ellipsis {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
}

@layer layout {
    @layer hero {
        .hero {
            display: grid;
            gap: 4rem;

            @media (width > 850px) {
                grid-template-columns: auto 1fr;

                .hero--right {
                    border-left: 2px solid var(--color-accent-15);
                    padding: 2rem 0 2rem 4rem;
                }
            }

            .hero--left {
                display: flex;
                flex-direction: column;
                gap: 4rem;
            }
        }
    }

    @layer control {
        .control {
            display: grid;
            gap: 3rem;

            @media (width > 850px) {
                grid-template-columns: 12rem minmax(0, min(80ch, 100%));
            }
        }
    }

    @layer content-tree {
        .content-tree {
            --_color: var(--color-accent-15-rgb);
        }

        .content-tree--node {
            anchor-scope: --base;

            .anchor {
                anchor-name: --base;
            }

            .target {
                anchor-scope: --target;
                anchor-name: --target;
            }

            .target::before {
                content: "";
                position: absolute;

                top: anchor(--base bottom);
                right: calc(anchor(--target left) + 5px);
                bottom: anchor(--target center);
                left: calc(anchor(--base left) + 0.5rem);

                border-left: 2px solid var(--_color);
                border-bottom: 2px solid var(--_color);
                border-bottom-left-radius: 20px;
            }
        }
    }
}

.works {
    display: grid;
    gap: 1rem;

    margin-top: 4rem;

    @media (width > 900px) {
        grid-template-columns: repeat(2, 1fr);
        gap: 2rem;
    }
}

.work {
    position: relative;
    overflow: hidden;

    display: flex;
    align-items: flex-end;

    height: 100%;

    img {
        display: block;

        width: 100%;
        height: 100%;
        object-fit: cover;

        transition: transform 0.3s ease;
    }
}

.work:hover {
    img {
        transform: scale(1.1);
    }

    .work--content ul {
        display: flex;
        opacity: 1;

        /*@starting-style {*/
        /*    !*display: none;*!*/
        /*    !*opacity: 0;*!*/
        /*}*/
    }

    .work--content::before {
        top: 1rem;
        right: 1rem;
    }
}

.work--content {
    position: absolute;
    inset: 0;

    display: flex;
    flex-direction: column;
    justify-content: space-between;

    background: linear-gradient(
            to bottom,
            rgba(0, 0, 0, 0) 60%,
            rgba(0, 0, 0, 0.7) 80%,
            rgba(0, 0, 0, 1) 100%
    );

    color: #e8e8e8;

    &::before {
        z-index: 1;

        content: "";

        position: absolute;
        top: 1.5rem;
        right: 1.5rem;

        width: 24px;
        height: 24px;

        mask: url("/public/assets/icons/arrow-outward.svg") no-repeat center / contain;
        -webkit-mask: url("/public/assets/icons/arrow-outward.svg") no-repeat center;
        -webkit-mask-size: contain;

        background-color: currentColor;

        transition: top 0.3s ease, right 0.3s ease;
    }

    p {
        color: #cdcdcd;
    }

    ul {
        display: flex;
        gap: 1.5rem;

        padding: 1rem 2rem;

        margin-right: calc(1.5rem + 24px);

        font-size: var(--font-size-base);

        background: linear-gradient(to bottom, rgba(0,0,0,0.6), rgba(0,0,0,0));
        color: #cdcdcd;

        opacity: 0;

        transition: display 0.3s, opacity 0.3s ease;
        transition-behavior: allow-discrete;
    }

    @media (width < 900px) {
        ul {
            display: flex;
            opacity: 1;
        }

        &::before {
            top: 1rem;
            right: 1rem;
        }
    }
}

.temp {
    padding: 1rem 2rem;
}

.scroller {
    /*width: 90%;*/
    overflow: scroll;

    /* Hide scrollbar in Firefox */
    scrollbar-width: none;

    /* Hide scrollbar in IE/Edge */
    -ms-overflow-style: none;

    /* Hide scrollbar in Chrome and Safari */
    &::-webkit-scrollbar {
        display: none;
    }

    mask: linear-gradient(to right, transparent 0%, black 4%, black 90%, transparent 100%) no-repeat 0 / 100% 100%;
    -webkit-mask: -webkit-linear-gradient(to right, transparent 0%, black 5px, black 90%, transparent 100%) no-repeat 0 / 100% 100%;
}

.companies {
    display: flex;
    flex-direction: column;
    gap: 5rem;
}

.positions > li {
    margin-top: 2rem;
    margin-left: 3rem;
}

.company-title {
    display: inline;
    background: var(--color-accent-15-rgb);
    padding: 7px 3rem;
    border-radius: 5px;
    color: var(--color-text-65);
}

.skills {
    font-family: var(--heading-font), sans-serif;
    color: var(--color-accent-70);
}

.skills li {
    display: inline;
}

.skills li:has(+ li)::after {
    content: " \00b7";
    margin-inline: 0.8rem;
}

.position-dates {
    margin-top: 0.5rem;
    color: var(--color-text-50);
}

.info {
    display: inline-flex;
    flex-direction: column;
    gap: 2rem;
}

.info p {
    margin-top: 3px;
}

.about--images {
    display: grid;
    gap: 1rem;

    width: min(900px, 100%);

    @media (width > 768px) {
        grid-template-columns: 1fr 1fr;
    }
}

.contact {
    ul {
        display: flex;
        flex-direction: column;
        gap: 1rem;

        color: var(--color-text-65);
    }
}

@layer components {
    @layer form {
        form {
            display: grid;
            gap: 2rem;
            margin-top: 2rem;

            width: min(600px, 100%);

            color: var(--color-text-65);
        }

        .form-group {
            display: grid;
            gap: 0.25rem;

            &:has([required]) label {
                display: flex;
                gap: 1ch;

                &::after {
                    content: "*";
                    color: var(--color-accent-100);
                }
            }
        }

        input, textarea {
            padding: 0.75em 1em;

            border: 1px solid var(--color-text-50);
            border-radius: 5px;

            background: transparent;

            outline: none;
            accent-color: var(--color-accent-40);

            transition: box-shadow 0.2s ease;

            &:focus-visible {
                box-shadow: 6px 6px 0 var(--color-accent-40);
            }
        }

        textarea {
            box-sizing: content-box;
            resize: vertical;
            min-block-size: 3lh;
        }

        form button {
            cursor: pointer;

            padding: 1em 1.5em;

            border: 0;
            border-radius: 16px;

            background-color: var(--color-accent-15);
            color: var(--color-text-65);

            &:hover,
            &:focus-visible {
                background-color: var(--color-accent-40);
            }
        }
    }
}

.writings {
    display: flex;
    flex-direction: column;
    gap: 2rem;
}

.writing a {
    display: flex;
    gap: 2rem;
}

.post-metadata-date {
    color: var(--color-accent-70);
}

.post-metadata-title {
    color: var(--color-accent-secondary-100);
}

.post-metadata-tags {
    color: var(--color-text-35);
}

.post-wrapper {
    display: grid;
    grid-template-columns: 70ch 1fr;
    gap: 9rem;
}

.post {
    display: flex;
    flex-direction: column;
    gap: 6rem;
}

.post-hero {
    display: flex;
    flex-direction: column;
    gap: 1rem;

    & h1 {
        position: relative;
    }

    & .post-metadata-tags {
        color: var(--color-accent-secondary-100);
    }
}

.post-content {
    display: grid;
    gap: 4rem;
}

.post-nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: var(--color-accent-secondary-100);
}

.post-nav li .disabled {
    text-decoration: line-through;
    cursor: not-allowed;
}

.post-nav li a {
    position: relative;
    padding-bottom: 1rem;

    &:hover {
        background-color: transparent;
    }

    & .tooltip {
        position: absolute;

        background: var(--color-accent-15);
        color: var(--color-text-65);

        border-radius: 5px;
        padding: 7px 12px;

        width: max-content;

        top: 100%;

        visibility: hidden;
        opacity: 0;
        transition: opacity 0.15s ease-in-out;

        &.prev {
            left: 0;
        }

        &.next {
            right: 0;
        }

        &::before {
            content: "";
            position: absolute;

            width: 30px;
            height: 30px;

            clip-path: polygon(75% 100%, 25% 100%, 50% 75%);
            background: var(--color-accent-15);

            bottom: 100%;
        }

        &.prev::before {
            left: 2.5rem;
        }

        &.next::before {
            right: 2.1rem;
        }
    }

    &:hover .tooltip {
        visibility: visible;
        opacity: 100;
    }
}

.error {
    display: grid;
    gap: 2rem;

    & h1 {
        color: var(--color-accent-secondary-100);
    }
}

.post-sidebar {
    display: flex;
    flex-direction: column;
    gap: 2rem;

    border-left: 1px solid var(--color-text-20);
    padding: 1rem 0 1rem 2rem;

    color: var(--color-text-65);
}

.sidebar-posts {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    font-size: var(--font-size-base);
}

.sidebar-post-date {
    margin-left: 0.5rem;
}

.posts > li {
    margin-top: 1.5rem;
    margin-left: 2.5rem;
}

summary {
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 0.4rem;

    margin: 0;
    padding: 6px 12px;

    border: 0;
    border-radius: 5px;

    background: var(--color-accent-15-rgb);

    cursor: pointer;
}

summary::marker {
    content: none;
}

summary::after {
    content: '';
    display: inline-block;
    width: 16px;
    height: 16px;
    background-size: contain;
    background-repeat: no-repeat;
    background-image: url("/public/assets/icons/chevron-right.svg");
}

details[open] summary::after {
    transform: rotate(90deg);
}